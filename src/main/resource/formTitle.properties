tab.convert.title=Convert
tab.convert.common.title=General
check.convert.common.line.title=Multiline
check.convert.common.auto.title=Auto Run
radio.convert.common.base64.title=Base64
radio.convert.common.hex.title=Hexadecimal
radio.convert.common.html.title=XML
radio.convert.common.unicode.title=Unicode
radio.convert.common.uricomponent.title=UriComponent
radio.convert.common.json.title=Json
radio.convert.common.time.title=Time
button.convert.common.encode.title=Encode \u25B7
button.convert.common.decode.title=\u25C1 Decode
button.convert.common.clean.title=Clean \u21BA
tab.convert.imgbase64.title=File
button.convert.imgbase64.encode.title=BASE64 Save as...
button.convert.imgbase64.decode.title=Decode to...
button.convert.imgbase64.decode.tooltip=Decode text from base64 source or choose folder contains base64 files\nPress Ctrl to use folder mode
button.convert.imgbase64.clean.title=Clean \u21BA
select.convert.imgbase64.encoding.tooltip=Choose encoding (Auto will use default by JVM)
file.convert.imgbase64.encoding.tooltip=Choose file convert to base64\nPress Ctrl to use folder mode
text.convert.imgbase64.encoding.tooltip=Base64 output/input area
tab.convert.splitter.title=Big Text Splitter
text.convert.splitter.cachesize.tooltip=Cahce Size (byte)
check.convert.splitter.line.title=Split align to line
text.convert.splitter.spiltcount.tooltip=Split count
text.convert.splitter.spiltsize.tooltip=Split size (byte, can use g/G/m/M/k/K to change unit)
text.convert.splitter.help.text=Big text splitter (for IDEA plugin)\nThis function is designed for console to split log file if it is too large, use split count or split size to cut the file, default use split size, when use align to line parameter will find \\n to split.\nThis function need a bunch of memory to temporary save part of text, function will call System GC when split done.\nCache size is a byte array for each read.\nNeed mention: Split count can't be used for file larger than 2G.\nSplit size can use unit after numbers, default is byte when no unit char before numbers.
button.convert.splitter.run.title=Run \u25B7
button.convert.splitter.clean.title=Clean \u21BA
tab.encrypt.title=En/Decrypt
tab.encrypt.hash.title=Hash
tab.encrypt.asymmetric.title=Asymmetric
tab.encrypt.asymmetric.publicKey.title=Public Key
tab.encrypt.asymmetric.privateKey.title=Private Key
button.encrypt.asymmetric.encryptWithPublicKey.title=Encrypt with Public Key \u25B7
button.encrypt.asymmetric.decryptWithPrivateKey.title=\u25C1 Decrypt with Private Key
button.encrypt.asymmetric.encryptWithPrivateKey.title=Encrypt with Private Key \u25B7
button.encrypt.asymmetric.decryptWithPublicKey.title=\u25C1 Decrypt with Public Key
button.encrypt.asymmetric.generateKey.title=Generate Key Pair
button.encrypt.asymmetric.clean.title=Clean \u21BA
select.encrypt.asymmetric.type.tooltip=Choose Mode
tab.encrypt.symmetric.title=Symmetric
select.encrypt.symmetric.type.tooltip=Choose mode (Jasypt Default Mode will save salt and IV to encrypted data)
select.encrypt.symmetric.mode.tooltip=Choose Mode
select.encrypt.symmetric.padding.tooltip=Choose Padding
select.encrypt.symmetric.key.tooltip=Input Key
select.encrypt.symmetric.iv.tooltip=Input IV
select.encrypt.symmetric.salt.tooltip=Input Salt
select.encrypt.symmetric.outputType.tooltip=Choose type to convert output bytes to string
button.encrypt.symmetric.encrypt.title=Encrypt \u25B7
button.encrypt.symmetric.decrypt.title=\u25C1 Decrypt
button.encrypt.symmetric.clean.title=Clean \u21BA
select.encrypt.hash.type.tooltip=Choose hash algorithm
button.encrypt.hash.file.title=Hash File \u25B7
button.encrypt.hash.text.title=Hash Text \u25B7
button.encrypt.hash.generateKey.title=Generate
button.encrypt.hash.generateKey.tooltip=Generate HMac Key
button.encrypt.hash.clean.title=Clean \u21BA
text.encrypt.hash.key.tooltip=Key for HMac Hash algorithm
text.encrypt.hash.assert.tooltip=Use single result to match output (not compatible with multiline)...
text.encrypt.hash.asserts.tooltip=Use MANIFEST.MF or multi hash file (*.sha1|*.md5|...) to match result...
tab.zxing.title=QRCode
button.zxing.toFile.title=Convert to Image
button.zxing.clean.title=Clean \u21BA
radio.zxing.tooltip=Choose code type
radio.zxing.qr.title=QRCode
radio.zxing.bar.title=Bar Code
radio.zxing.matrix.title=Matrix
file.zxing.fromFile.tooltip=Choose image to scan
text.zxing.width.tooltip=Input width for output image
text.zxing.height.tooltip=Input height for output image
select.zxing.errorCorrection.tooltip=Choose QRCode fault tolerance
tab.format.title=Format
button.format.do.title=Indent Format
button.format.undo.title=Tiling Format
text.format.tooltip=Input JsonObject/JsonArray/XML to format
tab.script.title=Script
check.script.auto.title=Auto Run
radio.script.type.js.text=JavaScript
radio.script.type.python.text=Python
radio.script.type.lua.text=Lua
radio.script.type.groovy.text=Groovy
tab.symbol.title=Symbol
tab.about.title=Other
button.about.generateHash.run.title=Batch Generate Hash
button.about.generateHash.run.tooltip=Batch tool for hash calculate. (Support auto generate POM file, used for import jar to generate .m2 repository)
file.about.generateHash.tooltip=Choose path or single file, and don't contain symbol link!
text.about.generateHash.suffix.tooltip=Suffix for hash file
text.about.generateHash.pathFilter.tooltip=Regex for file path, only calculate file matched. (Choose dir mode only, path in Windows are C:\\path\\to\\file\\)
text.about.generateHas.fileFilter.tooltip=Regex for file name, only calculate file matched. (Choose dir mode only)
check.about.generateHash.pom.tooltip=Mode for generate POM/.m2
button.about.getEncoding.tooltip=Get JVM Encoding
button.about.gc.title=Force GC
setting.main.title=Settings
setting.main.language.title=&Language
